{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Documents\\\\Development\\\\d-hub\\\\client\\\\src\\\\pages\\\\ManagementPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DatePicker, LocalizationProvider, AdapterDateFns } from '@mui/lab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManagementPage = () => {\n  _s();\n  // Initialize the 'date' state with today's date\n  const [date, setDate] = useState(new Date());\n\n  // Function to handle date change\n  const handleDateChange = newDate => {\n    setDate(newDate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Glucose Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n      dateAdapter: AdapterDateFns,\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        label: \"Select Date\",\n        value: date,\n        onChange: handleDateChange,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(ManagementPage, \"rW+rxy2mJ1oFEB1Cqg4Z2uVJym0=\");\n_c = ManagementPage;\nexport default ManagementPage;\nvar _c;\n$RefreshReg$(_c, \"ManagementPage\");","map":{"version":3,"names":["React","useState","DatePicker","LocalizationProvider","AdapterDateFns","jsxDEV","_jsxDEV","ManagementPage","_s","date","setDate","Date","handleDateChange","newDate","children","fileName","_jsxFileName","lineNumber","columnNumber","dateAdapter","label","value","onChange","renderInput","params","TextField","_c","$RefreshReg$"],"sources":["C:/Users/kevin/Documents/Development/d-hub/client/src/pages/ManagementPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { DatePicker, LocalizationProvider, AdapterDateFns } from '@mui/lab';\r\n\r\nconst ManagementPage = () => {\r\n  // Initialize the 'date' state with today's date\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  // Function to handle date change\r\n  const handleDateChange = (newDate) => {\r\n    setDate(newDate);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>Glucose Content</p>\r\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n        <DatePicker\r\n          label=\"Select Date\"\r\n          value={date}\r\n          onChange={handleDateChange}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n      </LocalizationProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManagementPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,EAAEC,oBAAoB,EAAEC,cAAc,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAIU,IAAI,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;IACpCH,OAAO,CAACG,OAAO,CAAC;EAClB,CAAC;EAED,oBACEP,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtBZ,OAAA,CAACH,oBAAoB;MAACgB,WAAW,EAAEf,cAAe;MAAAU,QAAA,eAChDR,OAAA,CAACJ,UAAU;QACTkB,KAAK,EAAC,aAAa;QACnBC,KAAK,EAAEZ,IAAK;QACZa,QAAQ,EAAEV,gBAAiB;QAC3BW,WAAW,EAAGC,MAAM,iBAAKlB,OAAA,CAACmB,SAAS;UAAA,GAAKD;QAAM;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACkB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV,CAAC;AAAAV,EAAA,CAtBKD,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AAwBpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}