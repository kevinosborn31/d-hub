{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"collapseIcon\", \"ContentComponent\", \"ContentProps\", \"endIcon\", \"expandIcon\", \"disabled\", \"icon\", \"id\", \"label\", \"nodeId\", \"onClick\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Collapse from '@mui/material/Collapse';\nimport { alpha, styled, useThemeProps } from '@mui/material/styles';\nimport ownerDocument from '@mui/utils/ownerDocument';\nimport useForkRef from '@mui/utils/useForkRef';\nimport unsupportedProp from '@mui/utils/unsupportedProp';\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { TreeViewContext } from '../TreeView/TreeViewContext';\nimport { DescendantProvider, useDescendant } from '../TreeView/descendants';\nimport { TreeItemContent } from './TreeItemContent';\nimport { treeItemClasses, getTreeItemUtilityClass } from './treeItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    content: ['content'],\n    expanded: ['expanded'],\n    selected: ['selected'],\n    focused: ['focused'],\n    disabled: ['disabled'],\n    iconContainer: ['iconContainer'],\n    label: ['label'],\n    group: ['group']\n  };\n  return composeClasses(slots, getTreeItemUtilityClass, classes);\n};\nconst TreeItemRoot = styled('li', {\n  name: 'MuiTreeItem',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  listStyle: 'none',\n  margin: 0,\n  padding: 0,\n  outline: 0\n});\nconst StyledTreeItemContent = styled(TreeItemContent, {\n  name: 'MuiTreeItem',\n  slot: 'Content',\n  overridesResolver: (props, styles) => {\n    return [styles.content, styles.iconContainer && {\n      [`& .${treeItemClasses.iconContainer}`]: styles.iconContainer\n    }, styles.label && {\n      [`& .${treeItemClasses.label}`]: styles.label\n    }];\n  }\n})(({\n  theme\n}) => ({\n  padding: '0 8px',\n  width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  WebkitTapHighlightColor: 'transparent',\n  '&:hover': {\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${treeItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity,\n    backgroundColor: 'transparent'\n  },\n  [`&.${treeItemClasses.focused}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${treeItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n    [`&.${treeItemClasses.focused}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`& .${treeItemClasses.iconContainer}`]: {\n    marginRight: 4,\n    width: 15,\n    display: 'flex',\n    flexShrink: 0,\n    justifyContent: 'center',\n    '& svg': {\n      fontSize: 18\n    }\n  },\n  [`& .${treeItemClasses.label}`]: _extends({\n    width: '100%',\n    // fixes overflow - see https://github.com/mui/material-ui/issues/27372\n    minWidth: 0,\n    paddingLeft: 4,\n    position: 'relative'\n  }, theme.typography.body1)\n}));\nconst TreeItemGroup = styled(Collapse, {\n  name: 'MuiTreeItem',\n  slot: 'Group',\n  overridesResolver: (props, styles) => styles.group\n})({\n  margin: 0,\n  padding: 0,\n  marginLeft: 17\n});\n\n/**\n *\n * Demos:\n *\n * - [Tree View](https://mui.com/material-ui/react-tree-view/)\n *\n * API:\n *\n * - [TreeItem API](https://mui.com/material-ui/api/tree-item/)\n */\nexport const TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTreeItem'\n  });\n  const {\n      children,\n      className,\n      collapseIcon,\n      ContentComponent = TreeItemContent,\n      ContentProps,\n      endIcon,\n      expandIcon,\n      disabled: disabledProp,\n      icon,\n      id: idProp,\n      label,\n      nodeId,\n      onClick,\n      onMouseDown,\n      TransitionComponent = Collapse,\n      TransitionProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    icons: contextIcons,\n    focus,\n    isExpanded,\n    isFocused,\n    isSelected,\n    isDisabled,\n    multiSelect,\n    disabledItemsFocusable,\n    mapFirstChar,\n    unMapFirstChar,\n    registerNode,\n    unregisterNode,\n    treeId\n  } = React.useContext(TreeViewContext);\n  let id;\n  if (idProp != null) {\n    id = idProp;\n  } else if (treeId && nodeId) {\n    id = `${treeId}-${nodeId}`;\n  }\n  const [treeItemElement, setTreeItemElement] = React.useState(null);\n  const contentRef = React.useRef(null);\n  const handleRef = useForkRef(setTreeItemElement, ref);\n  const descendant = React.useMemo(() => ({\n    element: treeItemElement,\n    id: nodeId\n  }), [nodeId, treeItemElement]);\n  const {\n    index,\n    parentId\n  } = useDescendant(descendant);\n  const expandable = Boolean(Array.isArray(children) ? children.length : children);\n  const expanded = isExpanded ? isExpanded(nodeId) : false;\n  const focused = isFocused ? isFocused(nodeId) : false;\n  const selected = isSelected ? isSelected(nodeId) : false;\n  const disabled = isDisabled ? isDisabled(nodeId) : false;\n  const ownerState = _extends({}, props, {\n    expanded,\n    focused,\n    selected,\n    disabled\n  });\n  const classes = useUtilityClasses(ownerState);\n  let displayIcon;\n  let expansionIcon;\n  if (expandable) {\n    if (!expanded) {\n      expansionIcon = expandIcon || contextIcons.defaultExpandIcon;\n    } else {\n      expansionIcon = collapseIcon || contextIcons.defaultCollapseIcon;\n    }\n  }\n  if (expandable) {\n    displayIcon = contextIcons.defaultParentIcon;\n  } else {\n    displayIcon = endIcon || contextIcons.defaultEndIcon;\n  }\n  React.useEffect(() => {\n    // On the first render a node's index will be -1. We want to wait for the real index.\n    if (registerNode && unregisterNode && index !== -1) {\n      registerNode({\n        id: nodeId,\n        idAttribute: id,\n        index,\n        parentId,\n        expandable,\n        disabled: disabledProp\n      });\n      return () => {\n        unregisterNode(nodeId);\n      };\n    }\n    return undefined;\n  }, [registerNode, unregisterNode, parentId, index, nodeId, expandable, disabledProp, id]);\n  React.useEffect(() => {\n    if (mapFirstChar && unMapFirstChar && label) {\n      var _contentRef$current$t, _contentRef$current;\n      mapFirstChar(nodeId, ((_contentRef$current$t = (_contentRef$current = contentRef.current) == null ? void 0 : _contentRef$current.textContent) != null ? _contentRef$current$t : '').substring(0, 1).toLowerCase());\n      return () => {\n        unMapFirstChar(nodeId);\n      };\n    }\n    return undefined;\n  }, [mapFirstChar, unMapFirstChar, nodeId, label]);\n  let ariaSelected;\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    /* single-selection trees unset aria-selected on un-selected items.\n     *\n     * If the tree does not support multiple selection, aria-selected\n     * is set to true for the selected node and it is not present on any other node in the tree.\n     * Source: https://www.w3.org/WAI/ARIA/apg/patterns/treeview/\n     */\n    ariaSelected = true;\n  }\n  function handleFocus(event) {\n    // DOM focus stays on the tree which manages focus with aria-activedescendant\n    if (event.target === event.currentTarget) {\n      let rootElement;\n      if (typeof event.target.getRootNode === 'function') {\n        rootElement = event.target.getRootNode();\n      } else {\n        rootElement = ownerDocument(event.target);\n      }\n      rootElement.getElementById(treeId).focus({\n        preventScroll: true\n      });\n    }\n    const unfocusable = !disabledItemsFocusable && disabled;\n    if (!focused && event.currentTarget === event.target && !unfocusable) {\n      focus(event, nodeId);\n    }\n  }\n  return /*#__PURE__*/_jsxs(TreeItemRoot, _extends({\n    className: clsx(classes.root, className),\n    role: \"treeitem\",\n    \"aria-expanded\": expandable ? expanded : undefined,\n    \"aria-selected\": ariaSelected,\n    \"aria-disabled\": disabled || undefined,\n    id: id,\n    tabIndex: -1\n  }, other, {\n    ownerState: ownerState,\n    onFocus: handleFocus,\n    ref: handleRef,\n    children: [/*#__PURE__*/_jsx(StyledTreeItemContent, _extends({\n      as: ContentComponent,\n      ref: contentRef,\n      classes: {\n        root: classes.content,\n        expanded: classes.expanded,\n        selected: classes.selected,\n        focused: classes.focused,\n        disabled: classes.disabled,\n        iconContainer: classes.iconContainer,\n        label: classes.label\n      },\n      label: label,\n      nodeId: nodeId,\n      onClick: onClick,\n      onMouseDown: onMouseDown,\n      icon: icon,\n      expansionIcon: expansionIcon,\n      displayIcon: displayIcon,\n      ownerState: ownerState\n    }, ContentProps)), children && /*#__PURE__*/_jsx(DescendantProvider, {\n      id: nodeId,\n      children: /*#__PURE__*/_jsx(TreeItemGroup, _extends({\n        as: TransitionComponent,\n        unmountOnExit: true,\n        className: classes.group,\n        in: expanded,\n        component: \"ul\",\n        role: \"group\"\n      }, TransitionProps, {\n        children: children\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * className applied to the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: PropTypes.node,\n  /**\n   * The component used for the content node.\n   * @default TreeItemContent\n   */\n  ContentComponent: elementTypeAcceptingRef,\n  /**\n   * Props applied to ContentComponent.\n   */\n  ContentProps: PropTypes.object,\n  /**\n   * If `true`, the node is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The icon displayed next to an end node.\n   */\n  endIcon: PropTypes.node,\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: PropTypes.node,\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n  /**\n   * This prop isn't supported.\n   * Use the `onNodeFocus` callback on the tree if you need to monitor a node's focus.\n   */\n  onFocus: unsupportedProp,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Collapse\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","Collapse","alpha","styled","useThemeProps","ownerDocument","useForkRef","unsupportedProp","elementTypeAcceptingRef","unstable_composeClasses","composeClasses","TreeViewContext","DescendantProvider","useDescendant","TreeItemContent","treeItemClasses","getTreeItemUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","slots","root","content","expanded","selected","focused","disabled","iconContainer","label","group","TreeItemRoot","name","slot","overridesResolver","props","styles","listStyle","margin","padding","outline","StyledTreeItemContent","theme","width","display","alignItems","cursor","WebkitTapHighlightColor","backgroundColor","vars","palette","action","hover","opacity","disabledOpacity","focus","primary","mainChannel","selectedOpacity","main","hoverOpacity","focusOpacity","marginRight","flexShrink","justifyContent","fontSize","minWidth","paddingLeft","position","typography","body1","TreeItemGroup","marginLeft","TreeItem","forwardRef","inProps","ref","children","className","collapseIcon","ContentComponent","ContentProps","endIcon","expandIcon","disabledProp","icon","id","idProp","nodeId","onClick","onMouseDown","TransitionComponent","TransitionProps","other","icons","contextIcons","isExpanded","isFocused","isSelected","isDisabled","multiSelect","disabledItemsFocusable","mapFirstChar","unMapFirstChar","registerNode","unregisterNode","treeId","useContext","treeItemElement","setTreeItemElement","useState","contentRef","useRef","handleRef","descendant","useMemo","element","index","parentId","expandable","Boolean","Array","isArray","length","displayIcon","expansionIcon","defaultExpandIcon","defaultCollapseIcon","defaultParentIcon","defaultEndIcon","useEffect","idAttribute","undefined","_contentRef$current$t","_contentRef$current","current","textContent","substring","toLowerCase","ariaSelected","handleFocus","event","target","currentTarget","rootElement","getRootNode","getElementById","preventScroll","unfocusable","role","tabIndex","onFocus","as","unmountOnExit","in","component","process","env","NODE_ENV","propTypes","node","object","string","bool","isRequired","sx","oneOfType","arrayOf","func","elementType"],"sources":["C:/Users/kevin/Documents/Development/d-hub/client/node_modules/@mui/x-tree-view/TreeItem/TreeItem.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"collapseIcon\", \"ContentComponent\", \"ContentProps\", \"endIcon\", \"expandIcon\", \"disabled\", \"icon\", \"id\", \"label\", \"nodeId\", \"onClick\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Collapse from '@mui/material/Collapse';\nimport { alpha, styled, useThemeProps } from '@mui/material/styles';\nimport ownerDocument from '@mui/utils/ownerDocument';\nimport useForkRef from '@mui/utils/useForkRef';\nimport unsupportedProp from '@mui/utils/unsupportedProp';\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { TreeViewContext } from '../TreeView/TreeViewContext';\nimport { DescendantProvider, useDescendant } from '../TreeView/descendants';\nimport { TreeItemContent } from './TreeItemContent';\nimport { treeItemClasses, getTreeItemUtilityClass } from './treeItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    content: ['content'],\n    expanded: ['expanded'],\n    selected: ['selected'],\n    focused: ['focused'],\n    disabled: ['disabled'],\n    iconContainer: ['iconContainer'],\n    label: ['label'],\n    group: ['group']\n  };\n  return composeClasses(slots, getTreeItemUtilityClass, classes);\n};\nconst TreeItemRoot = styled('li', {\n  name: 'MuiTreeItem',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  listStyle: 'none',\n  margin: 0,\n  padding: 0,\n  outline: 0\n});\nconst StyledTreeItemContent = styled(TreeItemContent, {\n  name: 'MuiTreeItem',\n  slot: 'Content',\n  overridesResolver: (props, styles) => {\n    return [styles.content, styles.iconContainer && {\n      [`& .${treeItemClasses.iconContainer}`]: styles.iconContainer\n    }, styles.label && {\n      [`& .${treeItemClasses.label}`]: styles.label\n    }];\n  }\n})(({\n  theme\n}) => ({\n  padding: '0 8px',\n  width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  WebkitTapHighlightColor: 'transparent',\n  '&:hover': {\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${treeItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity,\n    backgroundColor: 'transparent'\n  },\n  [`&.${treeItemClasses.focused}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${treeItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n    [`&.${treeItemClasses.focused}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`& .${treeItemClasses.iconContainer}`]: {\n    marginRight: 4,\n    width: 15,\n    display: 'flex',\n    flexShrink: 0,\n    justifyContent: 'center',\n    '& svg': {\n      fontSize: 18\n    }\n  },\n  [`& .${treeItemClasses.label}`]: _extends({\n    width: '100%',\n    // fixes overflow - see https://github.com/mui/material-ui/issues/27372\n    minWidth: 0,\n    paddingLeft: 4,\n    position: 'relative'\n  }, theme.typography.body1)\n}));\nconst TreeItemGroup = styled(Collapse, {\n  name: 'MuiTreeItem',\n  slot: 'Group',\n  overridesResolver: (props, styles) => styles.group\n})({\n  margin: 0,\n  padding: 0,\n  marginLeft: 17\n});\n\n/**\n *\n * Demos:\n *\n * - [Tree View](https://mui.com/material-ui/react-tree-view/)\n *\n * API:\n *\n * - [TreeItem API](https://mui.com/material-ui/api/tree-item/)\n */\nexport const TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTreeItem'\n  });\n  const {\n      children,\n      className,\n      collapseIcon,\n      ContentComponent = TreeItemContent,\n      ContentProps,\n      endIcon,\n      expandIcon,\n      disabled: disabledProp,\n      icon,\n      id: idProp,\n      label,\n      nodeId,\n      onClick,\n      onMouseDown,\n      TransitionComponent = Collapse,\n      TransitionProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    icons: contextIcons,\n    focus,\n    isExpanded,\n    isFocused,\n    isSelected,\n    isDisabled,\n    multiSelect,\n    disabledItemsFocusable,\n    mapFirstChar,\n    unMapFirstChar,\n    registerNode,\n    unregisterNode,\n    treeId\n  } = React.useContext(TreeViewContext);\n  let id;\n  if (idProp != null) {\n    id = idProp;\n  } else if (treeId && nodeId) {\n    id = `${treeId}-${nodeId}`;\n  }\n  const [treeItemElement, setTreeItemElement] = React.useState(null);\n  const contentRef = React.useRef(null);\n  const handleRef = useForkRef(setTreeItemElement, ref);\n  const descendant = React.useMemo(() => ({\n    element: treeItemElement,\n    id: nodeId\n  }), [nodeId, treeItemElement]);\n  const {\n    index,\n    parentId\n  } = useDescendant(descendant);\n  const expandable = Boolean(Array.isArray(children) ? children.length : children);\n  const expanded = isExpanded ? isExpanded(nodeId) : false;\n  const focused = isFocused ? isFocused(nodeId) : false;\n  const selected = isSelected ? isSelected(nodeId) : false;\n  const disabled = isDisabled ? isDisabled(nodeId) : false;\n  const ownerState = _extends({}, props, {\n    expanded,\n    focused,\n    selected,\n    disabled\n  });\n  const classes = useUtilityClasses(ownerState);\n  let displayIcon;\n  let expansionIcon;\n  if (expandable) {\n    if (!expanded) {\n      expansionIcon = expandIcon || contextIcons.defaultExpandIcon;\n    } else {\n      expansionIcon = collapseIcon || contextIcons.defaultCollapseIcon;\n    }\n  }\n  if (expandable) {\n    displayIcon = contextIcons.defaultParentIcon;\n  } else {\n    displayIcon = endIcon || contextIcons.defaultEndIcon;\n  }\n  React.useEffect(() => {\n    // On the first render a node's index will be -1. We want to wait for the real index.\n    if (registerNode && unregisterNode && index !== -1) {\n      registerNode({\n        id: nodeId,\n        idAttribute: id,\n        index,\n        parentId,\n        expandable,\n        disabled: disabledProp\n      });\n      return () => {\n        unregisterNode(nodeId);\n      };\n    }\n    return undefined;\n  }, [registerNode, unregisterNode, parentId, index, nodeId, expandable, disabledProp, id]);\n  React.useEffect(() => {\n    if (mapFirstChar && unMapFirstChar && label) {\n      var _contentRef$current$t, _contentRef$current;\n      mapFirstChar(nodeId, ((_contentRef$current$t = (_contentRef$current = contentRef.current) == null ? void 0 : _contentRef$current.textContent) != null ? _contentRef$current$t : '').substring(0, 1).toLowerCase());\n      return () => {\n        unMapFirstChar(nodeId);\n      };\n    }\n    return undefined;\n  }, [mapFirstChar, unMapFirstChar, nodeId, label]);\n  let ariaSelected;\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    /* single-selection trees unset aria-selected on un-selected items.\n     *\n     * If the tree does not support multiple selection, aria-selected\n     * is set to true for the selected node and it is not present on any other node in the tree.\n     * Source: https://www.w3.org/WAI/ARIA/apg/patterns/treeview/\n     */\n    ariaSelected = true;\n  }\n  function handleFocus(event) {\n    // DOM focus stays on the tree which manages focus with aria-activedescendant\n    if (event.target === event.currentTarget) {\n      let rootElement;\n      if (typeof event.target.getRootNode === 'function') {\n        rootElement = event.target.getRootNode();\n      } else {\n        rootElement = ownerDocument(event.target);\n      }\n      rootElement.getElementById(treeId).focus({\n        preventScroll: true\n      });\n    }\n    const unfocusable = !disabledItemsFocusable && disabled;\n    if (!focused && event.currentTarget === event.target && !unfocusable) {\n      focus(event, nodeId);\n    }\n  }\n  return /*#__PURE__*/_jsxs(TreeItemRoot, _extends({\n    className: clsx(classes.root, className),\n    role: \"treeitem\",\n    \"aria-expanded\": expandable ? expanded : undefined,\n    \"aria-selected\": ariaSelected,\n    \"aria-disabled\": disabled || undefined,\n    id: id,\n    tabIndex: -1\n  }, other, {\n    ownerState: ownerState,\n    onFocus: handleFocus,\n    ref: handleRef,\n    children: [/*#__PURE__*/_jsx(StyledTreeItemContent, _extends({\n      as: ContentComponent,\n      ref: contentRef,\n      classes: {\n        root: classes.content,\n        expanded: classes.expanded,\n        selected: classes.selected,\n        focused: classes.focused,\n        disabled: classes.disabled,\n        iconContainer: classes.iconContainer,\n        label: classes.label\n      },\n      label: label,\n      nodeId: nodeId,\n      onClick: onClick,\n      onMouseDown: onMouseDown,\n      icon: icon,\n      expansionIcon: expansionIcon,\n      displayIcon: displayIcon,\n      ownerState: ownerState\n    }, ContentProps)), children && /*#__PURE__*/_jsx(DescendantProvider, {\n      id: nodeId,\n      children: /*#__PURE__*/_jsx(TreeItemGroup, _extends({\n        as: TransitionComponent,\n        unmountOnExit: true,\n        className: classes.group,\n        in: expanded,\n        component: \"ul\",\n        role: \"group\"\n      }, TransitionProps, {\n        children: children\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * className applied to the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: PropTypes.node,\n  /**\n   * The component used for the content node.\n   * @default TreeItemContent\n   */\n  ContentComponent: elementTypeAcceptingRef,\n  /**\n   * Props applied to ContentComponent.\n   */\n  ContentProps: PropTypes.object,\n  /**\n   * If `true`, the node is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The icon displayed next to an end node.\n   */\n  endIcon: PropTypes.node,\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: PropTypes.node,\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n  /**\n   * This prop isn't supported.\n   * Use the `onNodeFocus` callback on the tree if you need to monitor a node's focus.\n   */\n  onFocus: unsupportedProp,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Collapse\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}