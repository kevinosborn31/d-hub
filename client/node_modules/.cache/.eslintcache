[{"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\index.tsx":"1","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\App.tsx":"3","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\enums\\PageRoutes.ts":"4","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\components\\MenuDrawer.tsx":"5","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\index.ts":"6","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\components\\Iconify.tsx":"7","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\DashboardPage.tsx":"8","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\EmergencyPage.tsx":"9","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\ManagementPage.tsx":"10","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\InformationPage.tsx":"11","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\ProfilePage.tsx":"12","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\SettingsPage.tsx":"13","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\utils\\fetchLocationInfo.ts":"14","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\constants\\EmergencyNumbers.ts":"15","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\components\\EmergencyConfirmationModal.tsx":"16","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\mocks\\_mockUser.ts":"17","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\mocks\\_mockGlucoseReadings.ts":"18","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\utils\\getCountryFromCoordinates.ts":"19","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\mocks\\_mockInformation.ts":"20","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\MapPage.tsx":"21","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\components\\ChatBotWindow.tsx":"22","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\components\\FAQSearch.tsx":"23","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\utils\\sendGPTMessage.ts":"24"},{"size":277,"mtime":1695605280259,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1695597838159,"results":"27","hashOfConfig":"26"},{"size":1157,"mtime":1695787873637,"results":"28","hashOfConfig":"26"},{"size":253,"mtime":1695786823685,"results":"29","hashOfConfig":"26"},{"size":4609,"mtime":1695786838859,"results":"30","hashOfConfig":"26"},{"size":415,"mtime":1695787788072,"results":"31","hashOfConfig":"26"},{"size":388,"mtime":1695619670645,"results":"32","hashOfConfig":"26"},{"size":165,"mtime":1695605301493,"results":"33","hashOfConfig":"26"},{"size":1966,"mtime":1695610488954,"results":"34","hashOfConfig":"26"},{"size":631,"mtime":1695786795880,"results":"35","hashOfConfig":"26"},{"size":1019,"mtime":1695790946409,"results":"36","hashOfConfig":"26"},{"size":3225,"mtime":1695694637443,"results":"37","hashOfConfig":"26"},{"size":167,"mtime":1695605302098,"results":"38","hashOfConfig":"26"},{"size":1476,"mtime":1695790989206,"results":"39","hashOfConfig":"26"},{"size":285,"mtime":1695610186550,"results":"40","hashOfConfig":"26"},{"size":1496,"mtime":1695619633031,"results":"41","hashOfConfig":"26"},{"size":466,"mtime":1695624283795,"results":"42","hashOfConfig":"26"},{"size":1528,"mtime":1695606463203,"results":"43","hashOfConfig":"26"},{"size":565,"mtime":1695610080474,"results":"44","hashOfConfig":"26"},{"size":300,"mtime":1695627779848,"results":"45","hashOfConfig":"26"},{"size":1503,"mtime":1695790939654,"results":"46","hashOfConfig":"26"},{"size":2860,"mtime":1695791277628,"results":"47","hashOfConfig":"26"},{"size":2973,"mtime":1695787987935,"results":"48","hashOfConfig":"26"},{"size":604,"mtime":1695791208972,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1w9kd6b",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"53"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"53"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"53"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"53"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\index.tsx",[],[],["127"],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\reportWebVitals.ts",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\App.tsx",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\enums\\PageRoutes.ts",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\components\\MenuDrawer.tsx",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\index.ts",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\components\\Iconify.tsx",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\DashboardPage.tsx",["128","129"],[],"import { useState, useEffect } from 'react';\r\n\r\nconst DashboardPage = () => {\r\n\r\n    return (\r\n        <p>Dash Content</p>\r\n    );\r\n}\r\n\r\nexport default DashboardPage","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\EmergencyPage.tsx",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\ManagementPage.tsx",["130","131","132"],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\InformationPage.tsx",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\ProfilePage.tsx",["133","134","135","136","137","138","139"],[],"import { Box, Button, Slider, TextField, Typography } from \"@mui/material\";\r\nimport { MOCK_USER } from \"../mocks/_mockUser\";\r\nimport { useState } from \"react\";\r\n\r\nconst ProfilePage = () => {\r\n  const {\r\n    givenNames,\r\n    verified,\r\n    email,\r\n    profilePictureURL,\r\n    medicareNumber,\r\n    sugarRange,\r\n    ketoneWarning,\r\n    surname,\r\n  } = MOCK_USER;\r\n\r\n  const onVerify = () => {\r\n    console.log(`verifying user ${email}`);\r\n  };\r\n\r\n  const onSave = () => {\r\n    return {\r\n\r\n    }\r\n  };\r\n\r\n  // TODO hook these up\r\n  const [glucoseRange, setGlucoseRange] = useState<number[]>(sugarRange as any);\r\n  const [ketoneLevel, setKetoneLevel] = useState(ketoneWarning);\r\n  const [userGivenNames, setUserGivenNames] = useState(givenNames);\r\n  const [userSurname, setUserSurname] = useState(surname);\r\n  const [medicare, setMedicare] = useState(medicareNumber);\r\n  const [profilePicture, setProfilePicture] = useState(profilePictureURL);\r\n  const [userEmail, setUserEmail] = useState(email);\r\n  const [verification, setVerification] = useState(verified);\r\n\r\n  const handleSugarChange = (event: { target: { value: any; }; }) => {\r\n    setGlucoseRange([...event.target.value]);\r\n  };\r\n\r\n  const handleKetoneChange = (event: { target: { value: string; }; }) => {\r\n    const level = event.target.value;\r\n    setKetoneLevel(Number(level));\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        gap: \"20px\",\r\n        marginTop: \"50px\",\r\n      }}\r\n    >\r\n      <Box>\r\n        <img\r\n          src={profilePicture}\r\n          alt={`${userGivenNames[0]} ${userSurname} profile photo`}\r\n        />\r\n      </Box>\r\n      <Box sx={{ display: \"flex\", gap: \"12px\" }}>\r\n        <TextField label=\"First name\" value={userGivenNames[0]} />\r\n        <TextField\r\n          label=\"Middle name\"\r\n          value={userGivenNames[1] ? userGivenNames[1] : \"\"}\r\n        />\r\n        <TextField label=\"Last name\" value={userSurname} /> \r\n      </Box>\r\n      <Box>\r\n        <TextField label=\"Email\" value={userEmail} fullWidth />\r\n      </Box>\r\n      <Box>\r\n        <Box>\r\n          <TextField label=\"Medicare number\" value={medicare} fullWidth />\r\n        </Box>\r\n        <Box sx={{ marginTop: \"16px\" }}>\r\n          {verification ? (\r\n            <Typography>Verified</Typography>\r\n          ) : (\r\n            <Button variant=\"contained\" onClick={() => onVerify()}>\r\n              Verify now\r\n            </Button>\r\n          )}\r\n        </Box>\r\n        <Box>\r\n          <Slider\r\n            min={1}\r\n            max={30}\r\n            getAriaLabel={() => \"Glucose Range\"}\r\n            value={glucoseRange}\r\n            onChange={() => handleSugarChange}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <Typography>Ketone warning</Typography>\r\n          <TextField\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={ketoneLevel}\r\n            onChange={() => handleKetoneChange}\r\n          />\r\n        </Box>\r\n        <Box sx={{ marginTop: \"16px\" }}>\r\n          <Button variant=\"contained\" onClick={() => onSave()}>\r\n            Save\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\SettingsPage.tsx",["140","141"],[],"import { useState, useEffect } from 'react';\r\n\r\nconst SettingsPage = () => {\r\n\r\n    return (\r\n        <p>Settings Content</p>\r\n    );\r\n}\r\n\r\nexport default SettingsPage","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\utils\\fetchLocationInfo.ts",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\constants\\EmergencyNumbers.ts",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\components\\EmergencyConfirmationModal.tsx",["142","143"],[],"import { Box, Button, Modal, Typography } from \"@mui/material\";\r\nimport { useState, useEffect, FC } from \"react\";\r\n\r\ninterface IEmergencyConfirmationModalProps {\r\n  modalOpen: boolean;\r\n  setModalOpen: (modalOpen: boolean) => void;\r\n  emergencyNumber: string;\r\n}\r\n\r\nconst EmergencyConfirmationModal: FC<IEmergencyConfirmationModalProps> = ({\r\n  modalOpen,\r\n  setModalOpen,\r\n  emergencyNumber\r\n}) => {\r\n  // TODO implement this \r\n  const callEmergency = () => {\r\n    console.log(`calling ${emergencyNumber}`);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={modalOpen}\r\n      onClose={() => setModalOpen(false)}\r\n      aria-labelledby=\"emergency-modal-title\"\r\n      aria-describedby=\"emergency-modal-description\"\r\n    >\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: \"80%\",\r\n          maxWidth: 400,\r\n          bgcolor: \"white\", \r\n          p: 3, \r\n          textAlign: \"center\", \r\n        }}\r\n      >\r\n        <Typography id=\"emergency-modal-title\" variant=\"h6\">\r\n          Are you sure you want to call emergency services?\r\n        </Typography>\r\n        <Typography id=\"emergency-modal-description\">\r\n          This will call {emergencyNumber} immediately\r\n        </Typography>\r\n        <Button onClick={() => callEmergency()} variant=\"contained\">\r\n          Confirm\r\n        </Button>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EmergencyConfirmationModal;\r\n","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\mocks\\_mockUser.ts",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\mocks\\_mockGlucoseReadings.ts",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\utils\\getCountryFromCoordinates.ts",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\mocks\\_mockInformation.ts",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\MapPage.tsx",["144"],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\components\\ChatBotWindow.tsx",["145"],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\components\\FAQSearch.tsx",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\utils\\sendGPTMessage.ts",[],[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":1,"column":10,"nodeType":"150","messageId":"151","endLine":1,"endColumn":18},{"ruleId":"148","severity":1,"message":"152","line":1,"column":20,"nodeType":"150","messageId":"151","endLine":1,"endColumn":29},{"ruleId":"148","severity":1,"message":"153","line":4,"column":15,"nodeType":"150","messageId":"151","endLine":4,"endColumn":24},{"ruleId":"148","severity":1,"message":"154","line":7,"column":10,"nodeType":"150","messageId":"151","endLine":7,"endColumn":14},{"ruleId":"148","severity":1,"message":"155","line":9,"column":9,"nodeType":"150","messageId":"151","endLine":9,"endColumn":25},{"ruleId":"148","severity":1,"message":"156","line":30,"column":26,"nodeType":"150","messageId":"151","endLine":30,"endColumn":43},{"ruleId":"148","severity":1,"message":"157","line":31,"column":23,"nodeType":"150","messageId":"151","endLine":31,"endColumn":37},{"ruleId":"148","severity":1,"message":"158","line":32,"column":20,"nodeType":"150","messageId":"151","endLine":32,"endColumn":31},{"ruleId":"148","severity":1,"message":"159","line":33,"column":26,"nodeType":"150","messageId":"151","endLine":33,"endColumn":43},{"ruleId":"148","severity":1,"message":"160","line":34,"column":21,"nodeType":"150","messageId":"151","endLine":34,"endColumn":33},{"ruleId":"148","severity":1,"message":"161","line":35,"column":24,"nodeType":"150","messageId":"151","endLine":35,"endColumn":39},{"ruleId":"162","severity":1,"message":"163","line":56,"column":9,"nodeType":"164","endLine":59,"endColumn":11},{"ruleId":"148","severity":1,"message":"149","line":1,"column":10,"nodeType":"150","messageId":"151","endLine":1,"endColumn":18},{"ruleId":"148","severity":1,"message":"152","line":1,"column":20,"nodeType":"150","messageId":"151","endLine":1,"endColumn":29},{"ruleId":"148","severity":1,"message":"149","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":18},{"ruleId":"148","severity":1,"message":"152","line":2,"column":20,"nodeType":"150","messageId":"151","endLine":2,"endColumn":29},{"ruleId":"148","severity":1,"message":"165","line":22,"column":10,"nodeType":"150","messageId":"151","endLine":22,"endColumn":13},{"ruleId":"166","severity":1,"message":"167","line":68,"column":6,"nodeType":"168","endLine":68,"endColumn":8,"suggestions":"169"},"no-new-object",["170"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'TextField' is defined but never used.","'date' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","'setUserGivenNames' is assigned a value but never used.","'setUserSurname' is assigned a value but never used.","'setMedicare' is assigned a value but never used.","'setProfilePicture' is assigned a value but never used.","'setUserEmail' is assigned a value but never used.","'setVerification' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'map' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'chatHistory' and 'openaiApiKey'. Either include them or remove the dependency array. You can also do a functional update 'setChatHistory(c => ...)' if you only need 'chatHistory' in the 'setChatHistory' call.","ArrayExpression",["171"],"no-object-constructor",{"desc":"172","fix":"173"},"Update the dependencies array to be: [chatHistory, openaiApiKey]",{"range":"174","text":"175"},[1977,1979],"[chatHistory, openaiApiKey]"]