[{"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\index.tsx":"1","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\App.tsx":"3","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\enums\\PageRoutes.ts":"4","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\components\\MenuDrawer.tsx":"5","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\index.ts":"6","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\components\\Iconify.tsx":"7","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\DashboardPage.tsx":"8","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\EmergencyPage.tsx":"9","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\ManagementPage.tsx":"10","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\InformationPage.tsx":"11","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\ProfilePage.tsx":"12","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\SettingsPage.tsx":"13","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\utils\\fetchLocationInfo.ts":"14","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\constants\\EmergencyNumbers.ts":"15","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\components\\EmergencyConfirmationModal.tsx":"16","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\mocks\\_mockUser.ts":"17","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\mocks\\_mockGlucoseReadings.ts":"18","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\utils\\getCountryFromCoordinates.ts":"19","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\mocks\\_mockInformation.ts":"20","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\MapPage.tsx":"21","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\components\\ChatBotWindow.tsx":"22","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\components\\FAQSearch.tsx":"23","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\utils\\sendGPTMessage.ts":"24","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\RegisterPage.tsx":"25","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\LoginPage.tsx":"26","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\utils\\getGoogleUserData.ts":"27"},{"size":425,"mtime":1696291617993,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1695597838159,"results":"30","hashOfConfig":"29"},{"size":1328,"mtime":1695865783722,"results":"31","hashOfConfig":"29"},{"size":305,"mtime":1695865656273,"results":"32","hashOfConfig":"29"},{"size":4607,"mtime":1695794532157,"results":"33","hashOfConfig":"29"},{"size":527,"mtime":1695865072168,"results":"34","hashOfConfig":"29"},{"size":388,"mtime":1695619670645,"results":"35","hashOfConfig":"29"},{"size":4432,"mtime":1696291345917,"results":"36","hashOfConfig":"29"},{"size":1966,"mtime":1695610488954,"results":"37","hashOfConfig":"29"},{"size":631,"mtime":1695786795880,"results":"38","hashOfConfig":"29"},{"size":1019,"mtime":1695790946409,"results":"39","hashOfConfig":"29"},{"size":3646,"mtime":1696391936152,"results":"40","hashOfConfig":"29"},{"size":121,"mtime":1696291628171,"results":"41","hashOfConfig":"29"},{"size":1476,"mtime":1695790989206,"results":"42","hashOfConfig":"29"},{"size":285,"mtime":1695610186550,"results":"43","hashOfConfig":"29"},{"size":1475,"mtime":1696291987901,"results":"44","hashOfConfig":"29"},{"size":466,"mtime":1695624283795,"results":"45","hashOfConfig":"29"},{"size":1528,"mtime":1695606463203,"results":"46","hashOfConfig":"29"},{"size":565,"mtime":1695610080474,"results":"47","hashOfConfig":"29"},{"size":3145,"mtime":1696392204937,"results":"48","hashOfConfig":"29"},{"size":2093,"mtime":1696292121290,"results":"49","hashOfConfig":"29"},{"size":2860,"mtime":1695791277628,"results":"50","hashOfConfig":"29"},{"size":3348,"mtime":1696392417413,"results":"51","hashOfConfig":"29"},{"size":604,"mtime":1695791208972,"results":"52","hashOfConfig":"29"},{"size":1862,"mtime":1695866377532,"results":"53","hashOfConfig":"29"},{"size":1130,"mtime":1696291219152,"results":"54","hashOfConfig":"29"},{"size":488,"mtime":1696291331552,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w9kd6b",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\index.tsx",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\reportWebVitals.ts",[],[],["141"],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\App.tsx",[],[],["142"],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\enums\\PageRoutes.ts",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\components\\MenuDrawer.tsx",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\index.ts",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\components\\Iconify.tsx",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\DashboardPage.tsx",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\EmergencyPage.tsx",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\ManagementPage.tsx",["143","144","145"],[],"import React, { useState } from 'react';\r\n// import DatePicker from 'react-datepicker';\r\n// import 'react-datepicker/dist/react-datepicker.css'; \r\nimport { Box, TextField } from '@mui/material';\r\n\r\nconst ManagementPage = () => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const handleDateChange = (newDate: Date) => {\r\n    setDate(newDate);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n        {/* <DatePicker\r\n            selected={date}\r\n            onChange={handleDateChange}\r\n            dateFormat=\"MMMM d, yyyy\"\r\n            customInput={<TextField />} \r\n        /> */}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ManagementPage;\r\n","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\InformationPage.tsx",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\ProfilePage.tsx",["146","147","148"],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\SettingsPage.tsx",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\utils\\fetchLocationInfo.ts",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\constants\\EmergencyNumbers.ts",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\components\\EmergencyConfirmationModal.tsx",["149","150"],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\mocks\\_mockUser.ts",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\mocks\\_mockGlucoseReadings.ts",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\utils\\getCountryFromCoordinates.ts",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\mocks\\_mockInformation.ts",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\MapPage.tsx",["151","152"],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\components\\ChatBotWindow.tsx",["153"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Box, TextField, Button } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { ChatGPTMessage } from \"../interfaces/ChatGPTMessage\";\r\nimport { sendGPTMessage } from \"../utils/sendGPTMessage\";\r\n\r\nconst ChatBotWindow: React.FC = () => {\r\n  const [chatHistory, setChatHistory] = useState<ChatGPTMessage[]>([]);\r\n  const [userInput, setUserInput] = useState<string>(\"\");\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const openaiApiKey = process.env.CHAT_GPT_API_KEY;\r\n\r\n  const handleUserInputChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setUserInput(event.target.value);\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!userInput.trim()) return;\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const assistantResponse = await sendGPTMessage(userInput);\r\n\r\n      setChatHistory([...chatHistory, { text: userInput, role: \"user\" }]);\r\n      setChatHistory([\r\n        ...chatHistory,\r\n        { text: assistantResponse, role: \"assistant\" },\r\n      ]);\r\n      setUserInput(\"\");\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"https://api.openai.com/v1/chat/completions\",\r\n        {\r\n          model: \"gpt-3.5-turbo\",\r\n          prompt: \"Hello! How can I assist you?\",\r\n          max_tokens: 50, \r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${openaiApiKey}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        const assistantResponse = response.data.choices[0].text;\r\n        setChatHistory([\r\n          ...chatHistory,\r\n          { text: assistantResponse, role: \"assistant\" },\r\n        ]);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n        if (error.response.status === 429) {\r\n            console.error('ChatGPT quota exceeded')\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        style={{\r\n          height: \"50vh\", \r\n          overflowY: \"scroll\",\r\n        }}\r\n      >\r\n        {chatHistory.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={\r\n              message.role === \"user\" ? \"user-message\" : \"assistant-message\"\r\n            }\r\n          >\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </Box>\r\n      <TextField\r\n        label=\"Type your message...\"\r\n        variant=\"outlined\"\r\n        value={userInput}\r\n        fullWidth\r\n        onChange={handleUserInputChange}\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\" \r\n        onClick={handleSendMessage}\r\n        disabled={isLoading}\r\n        sx={{ marginTop: \"8px\"}}\r\n      >\r\n        Send\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatBotWindow;\r\n","C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\components\\FAQSearch.tsx",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\utils\\sendGPTMessage.ts",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\RegisterPage.tsx",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\pages\\LoginPage.tsx",[],[],"C:\\Users\\kevin\\Documents\\Development\\d-hub\\client\\src\\utils\\getGoogleUserData.ts",[],[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"154","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":4,"column":15,"nodeType":"159","messageId":"160","endLine":4,"endColumn":24},{"ruleId":"157","severity":1,"message":"161","line":7,"column":10,"nodeType":"159","messageId":"160","endLine":7,"endColumn":14},{"ruleId":"157","severity":1,"message":"162","line":9,"column":9,"nodeType":"159","messageId":"160","endLine":9,"endColumn":25},{"ruleId":"157","severity":1,"message":"163","line":30,"column":26,"nodeType":"159","messageId":"160","endLine":30,"endColumn":43},{"ruleId":"157","severity":1,"message":"164","line":32,"column":24,"nodeType":"159","messageId":"160","endLine":32,"endColumn":39},{"ruleId":"165","severity":1,"message":"166","line":44,"column":9,"nodeType":"167","endLine":47,"endColumn":11},{"ruleId":"157","severity":1,"message":"168","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":18},{"ruleId":"157","severity":1,"message":"169","line":2,"column":20,"nodeType":"159","messageId":"160","endLine":2,"endColumn":29},{"ruleId":"157","severity":1,"message":"170","line":21,"column":10,"nodeType":"159","messageId":"160","endLine":21,"endColumn":13},{"ruleId":"157","severity":1,"message":"171","line":22,"column":10,"nodeType":"159","messageId":"160","endLine":22,"endColumn":17},{"ruleId":"172","severity":1,"message":"173","line":68,"column":6,"nodeType":"174","endLine":68,"endColumn":8,"suggestions":"175"},"no-new-object",["176"],["176"],"@typescript-eslint/no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'date' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","'setProfilePicture' is assigned a value but never used.","'setVerification' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'map' is assigned a value but never used.","'markers' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'chatHistory' and 'openaiApiKey'. Either include them or remove the dependency array. You can also do a functional update 'setChatHistory(c => ...)' if you only need 'chatHistory' in the 'setChatHistory' call.","ArrayExpression",["177"],"no-object-constructor",{"desc":"178","fix":"179"},"Update the dependencies array to be: [chatHistory, openaiApiKey]",{"range":"180","text":"181"},[1977,1979],"[chatHistory, openaiApiKey]"]